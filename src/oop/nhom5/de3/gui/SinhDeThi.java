/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package oop.nhom5.de3.gui;

import java.awt.event.ItemEvent;
import java.io.File;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import oop.nhom5.de3.controller.CauHoi;
import oop.nhom5.de3.controller.DeThi;
import oop.nhom5.de3.controller.MonHoc;
import oop.nhom5.de3.controller.TracNghiem;
import oop.nhom5.de3.controller.TuLuan;
import oop.nhom5.de3.model.IOFileBinary;
import oop.nhom5.de3.model.IOFilePDF;
import oop.nhom5.de3.model.IOFileWord;

/**
 *
 * @author KING
 */
public class SinhDeThi extends javax.swing.JFrame {

    private MonHoc monHocDangChon;
    //-----------------------------
    private ArrayList<CauHoi> dsCauHoiMonHoc;
    private ArrayList<TracNghiem> dsTracNghiemMonHoc;
    private ArrayList<TuLuan> dsTuLuanMonHoc;
    //---Thong tin de thi
    private DeThi deThi;
    //---Thuoc tinh setModel cho cac JList va JComboBox
    private DefaultComboBoxModel cbChuongModel;
    private DefaultListModel listDsCauHoiDeThiModel;

    //---Mang luu so cau hoi trac nghiem va tu luan theo cac chuong, phan tu dau tien la tong so cau hoi
    private int[] soTNChuong;
    private int[] soTLChuong;

    //---Mang luu so cau hoi theo do kho, phan tu dau tien la tong so cau hoi
    private int[] soTNDoKho;
    private int[] soTLDoKho;

    /**
     * Creates new form ChonCauHoi
     */
    public SinhDeThi() {
        initComponents();
        //---Hien thi giua man hinh
        setLocationRelativeTo(null);
    }

    public SinhDeThi(MonHoc monHocDangChon) {
        initComponents();
        //---Hien thi giua man hinh
        setLocationRelativeTo(null);
        this.monHocDangChon = monHocDangChon;

        this.deThi = new DeThi(monHocDangChon);

        this.dsCauHoiMonHoc = new ArrayList();
        this.dsTracNghiemMonHoc = new ArrayList();
        this.dsTuLuanMonHoc = new ArrayList();

        cbChuongModel = new DefaultComboBoxModel();
        this.listDsCauHoiDeThiModel = new DefaultListModel();

        int soChuong = monHocDangChon.getSoChuong();
        this.soTNChuong = new int[soChuong + 1];
        this.soTLChuong = new int[soChuong + 1];
        this.soTNDoKho = new int[4];
        this.soTLDoKho = new int[4];

        //---Doc tu file dsTracNghiem va dsTuLuan cua monHocDangChon
        readDsTracNghiem();
        readDsTuLuan();

        //---Khoi tao cbChuong voi so chuong tuong ung cua monHocDangChon
        cbChuongModel.addElement("Chương");
        for (int i = 0; i < monHocDangChon.getSoChuong(); i++) {
            cbChuongModel.addElement("Chương " + (i + 1));
        }
        cbChuong.setModel(cbChuongModel);

        this.rbTrungGian.setVisible(false);
        this.rbTG.setVisible(false);
        this.tfTNChuong.setEditable(false);
        this.tfTLChuong.setEditable(false);
        this.tfTNDoKho.setEditable(false);
        this.tfTLDoKho.setEditable(false);
        this.lbTronDapAn.setVisible(false);
        tfTenDeThi.setText(this.inTenDethi().toString());
        taDeThi.setText(this.deThi.inDeThi().toString());
    }

    //Doc du lieu tu file luu vao DsTracNghiem
    private void readDsTracNghiem() {
        this.dsTracNghiemMonHoc = IOFileBinary.readFile("data//TracNghiem" + monHocDangChon.getMaHocPhan() + ".dat");
        this.dsCauHoiMonHoc.addAll(this.dsTracNghiemMonHoc);
    }

    //Doc du lieu tu file luu vao DsTuLuan  
    private void readDsTuLuan() {
        this.dsTuLuanMonHoc = IOFileBinary.readFile("data//TuLuan" + monHocDangChon.getMaHocPhan() + ".dat");
        this.dsCauHoiMonHoc.addAll(this.dsTuLuanMonHoc);
    }

    private StringBuffer inTenDethi() {
        StringBuffer tenDeThi = new StringBuffer("Đề thi ");
        tenDeThi.append(monHocDangChon.getMaHocPhan().toUpperCase()).append("-");
        tenDeThi.append(deThi.getKiHoc()).append("-").append(deThi.getNamHoc());
        return tenDeThi;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jRadioButton6 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listDsCauHoiDeThi = new javax.swing.JList<>();
        bUp = new javax.swing.JButton();
        bDown = new javax.swing.JButton();
        lbXoaCauHoi = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfTenDeThi = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        taDeThi = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tfThoiGian = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        tfNamHoc = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        rbKi1 = new javax.swing.JRadioButton();
        rbKi2 = new javax.swing.JRadioButton();
        rbKiHe = new javax.swing.JRadioButton();
        lbXaoTronCauHoi = new javax.swing.JLabel();
        lbIn = new javax.swing.JLabel();
        lbWord = new javax.swing.JLabel();
        bLuuDeThi = new javax.swing.JButton();
        bXoaDeThi = new javax.swing.JButton();
        lbTronDapAn = new javax.swing.JLabel();
        rbTrungGian = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        rbTracNghiem = new javax.swing.JRadioButton();
        rbTuLuan = new javax.swing.JRadioButton();
        rbTatCa = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        rbChung = new javax.swing.JRadioButton();
        rbRieng = new javax.swing.JRadioButton();
        jLabel13 = new javax.swing.JLabel();
        spSoCauTN = new javax.swing.JSpinner();
        jLabel14 = new javax.swing.JLabel();
        cbChuong = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        tfTNChuong = new javax.swing.JTextField();
        tfTLChuong = new javax.swing.JTextField();
        cbDoKho = new javax.swing.JComboBox<>();
        ckbSoLuongCauHoi = new javax.swing.JCheckBox();
        ckbDoKho = new javax.swing.JCheckBox();
        tfTNDoKho = new javax.swing.JTextField();
        tfTLDoKho = new javax.swing.JTextField();
        bTaoDeThi = new javax.swing.JButton();
        rbTG = new javax.swing.JRadioButton();
        spSoCauTL = new javax.swing.JSpinner();
        lbPDF = new javax.swing.JLabel();

        jScrollPane5.setViewportView(jTextPane1);

        jRadioButton6.setText("jRadioButton6");

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SInh đề thi tự động");

        jLabel4.setText("Danh sách các câu trong đề");

        listDsCauHoiDeThi.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        listDsCauHoiDeThi.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listDsCauHoiDeThiValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(listDsCauHoiDeThi);

        bUp.setText("^");
        bUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpActionPerformed(evt);
            }
        });

        bDown.setText("v");
        bDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDownActionPerformed(evt);
            }
        });

        lbXoaCauHoi.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lbXoaCauHoi.setForeground(new java.awt.Color(255, 0, 0));
        lbXoaCauHoi.setText("Xóa câu hỏi");
        lbXoaCauHoi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbXoaCauHoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbXoaCauHoiMouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setText("Tên đề thi");

        tfTenDeThi.setAutoscrolls(false);

        taDeThi.setColumns(20);
        taDeThi.setRows(5);
        taDeThi.setWrapStyleWord(true);
        jScrollPane4.setViewportView(taDeThi);

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setText("Thông tin về đề thi");

        jLabel8.setText("Thời gian");

        tfThoiGian.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfThoiGianKeyReleased(evt);
            }
        });

        jLabel9.setText("phút");

        jLabel10.setText("Năm học");

        tfNamHoc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfNamHocKeyReleased(evt);
            }
        });

        jLabel11.setText("Kì học");

        buttonGroup1.add(rbKi1);
        rbKi1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        rbKi1.setText("1");
        rbKi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbKi1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbKi2);
        rbKi2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        rbKi2.setText("2");
        rbKi2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbKi2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbKiHe);
        rbKiHe.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        rbKiHe.setText("Kì hè");
        rbKiHe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbKiHeActionPerformed(evt);
            }
        });

        lbXaoTronCauHoi.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lbXaoTronCauHoi.setText("Xáo trộn các câu hỏi");
        lbXaoTronCauHoi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbXaoTronCauHoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbXaoTronCauHoiMouseClicked(evt);
            }
        });

        lbIn.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lbIn.setText("In");
        lbIn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbIn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbInMouseClicked(evt);
            }
        });

        lbWord.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lbWord.setForeground(new java.awt.Color(0, 0, 255));
        lbWord.setText("Xuất ra file Word");
        lbWord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbWord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbWordMouseClicked(evt);
            }
        });

        bLuuDeThi.setBackground(new java.awt.Color(0, 0, 255));
        bLuuDeThi.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        bLuuDeThi.setForeground(new java.awt.Color(255, 255, 255));
        bLuuDeThi.setText("Lưu đề thi");
        bLuuDeThi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLuuDeThiActionPerformed(evt);
            }
        });

        bXoaDeThi.setBackground(new java.awt.Color(255, 0, 0));
        bXoaDeThi.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        bXoaDeThi.setForeground(new java.awt.Color(255, 255, 255));
        bXoaDeThi.setText("Xóa đề thi");
        bXoaDeThi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bXoaDeThiActionPerformed(evt);
            }
        });

        lbTronDapAn.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lbTronDapAn.setForeground(new java.awt.Color(0, 0, 255));
        lbTronDapAn.setText("Trộn đáp án");
        lbTronDapAn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbTronDapAn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbTronDapAnMouseClicked(evt);
            }
        });

        buttonGroup1.add(rbTrungGian);
        rbTrungGian.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setText("Dạng đề thi");

        buttonGroup2.add(rbTracNghiem);
        rbTracNghiem.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        rbTracNghiem.setText("Trắc nghiệm");
        rbTracNghiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbTracNghiemActionPerformed(evt);
            }
        });

        buttonGroup2.add(rbTuLuan);
        rbTuLuan.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        rbTuLuan.setText("Tự luận");
        rbTuLuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbTuLuanActionPerformed(evt);
            }
        });

        buttonGroup2.add(rbTatCa);
        rbTatCa.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        rbTatCa.setText("Tất cả");
        rbTatCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbTatCaActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel12.setText("Hình thức");

        buttonGroup3.add(rbChung);
        rbChung.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        rbChung.setText("Phần trắc nghiệm và tự luận chung");

        buttonGroup3.add(rbRieng);
        rbRieng.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        rbRieng.setText("Phần trắc nghiệm và tự luận riêng");

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel13.setText("Số câu");

        spSoCauTN.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N

        cbChuong.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cbChuong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chương", "Chương 1" }));
        cbChuong.setEnabled(false);
        cbChuong.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbChuongItemStateChanged(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel15.setText("Trắc nghiệm");

        jLabel16.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel16.setText("Tự luận");

        tfTNChuong.setText("0");
        tfTNChuong.setEnabled(false);
        tfTNChuong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfTNChuongKeyReleased(evt);
            }
        });

        tfTLChuong.setText("0");
        tfTLChuong.setEnabled(false);
        tfTLChuong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfTLChuongKeyReleased(evt);
            }
        });

        cbDoKho.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cbDoKho.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Độ khó", "Dễ", "Trung bình", "Khó" }));
        cbDoKho.setEnabled(false);
        cbDoKho.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbDoKhoItemStateChanged(evt);
            }
        });

        ckbSoLuongCauHoi.setText("Số lượng câu hỏi mỗi chương");
        ckbSoLuongCauHoi.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckbSoLuongCauHoiItemStateChanged(evt);
            }
        });

        ckbDoKho.setText("Độ khó");
        ckbDoKho.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckbDoKhoItemStateChanged(evt);
            }
        });

        tfTNDoKho.setText("0");
        tfTNDoKho.setEnabled(false);
        tfTNDoKho.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfTNDoKhoKeyReleased(evt);
            }
        });

        tfTLDoKho.setText("0");
        tfTLDoKho.setEnabled(false);
        tfTLDoKho.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfTLDoKhoKeyReleased(evt);
            }
        });

        bTaoDeThi.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        bTaoDeThi.setText("Tạo đề thi");
        bTaoDeThi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bTaoDeThiActionPerformed(evt);
            }
        });

        buttonGroup3.add(rbTG);

        lbPDF.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lbPDF.setForeground(new java.awt.Color(0, 0, 255));
        lbPDF.setText("Xuất ra file PDF");
        lbPDF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbPDFMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addGap(27, 27, 27)
                                    .addComponent(rbKi1)
                                    .addGap(18, 18, 18)
                                    .addComponent(rbKi2)
                                    .addGap(22, 22, 22)
                                    .addComponent(rbKiHe))
                                .addComponent(jLabel7)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tfThoiGian, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel9))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel10)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(34, 34, 34)
                                                    .addComponent(lbTronDapAn)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(lbXoaCauHoi))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(tfNamHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4)
                                            .addComponent(ckbDoKho)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(bUp)
                                        .addComponent(bDown))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(78, 78, 78)
                                    .addComponent(rbTrungGian))
                                .addComponent(bLuuDeThi))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel12))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbChung)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rbTracNghiem)
                                        .addGap(29, 29, 29)
                                        .addComponent(rbTuLuan))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(134, 134, 134))
                            .addComponent(cbDoKho, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(77, 77, 77))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ckbSoLuongCauHoi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addComponent(cbChuong, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane4)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lbXaoTronCauHoi)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbIn)
                                    .addGap(34, 34, 34))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(bXoaDeThi)
                                    .addGap(155, 155, 155)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lbPDF)
                                .addComponent(lbWord))))
                    .addComponent(rbTatCa)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rbRieng)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbTG))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tfTNChuong, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                                .addComponent(tfTNDoKho))
                            .addComponent(spSoCauTN, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfTLChuong, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                            .addComponent(tfTLDoKho)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(spSoCauTL, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(tfTenDeThi, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(bTaoDeThi)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(rbTracNghiem)
                    .addComponent(rbTuLuan)
                    .addComponent(rbTatCa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(rbChung)
                    .addComponent(rbRieng)
                    .addComponent(rbTG))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addGap(4, 4, 4)
                .addComponent(jLabel14)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(spSoCauTN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spSoCauTL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbSoLuongCauHoi)
                    .addComponent(cbChuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfTNChuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfTLChuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbDoKho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ckbDoKho)
                    .addComponent(tfTNDoKho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfTLDoKho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(101, 101, 101)
                                .addComponent(bUp)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bDown))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tfTenDeThi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bTaoDeThi)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbTronDapAn)
                            .addComponent(lbXoaCauHoi))
                        .addGap(28, 28, 28)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(tfThoiGian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(tfNamHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbXaoTronCauHoi)
                            .addComponent(lbIn)
                            .addComponent(lbWord)
                            .addComponent(jLabel11)
                            .addComponent(rbKi1)
                            .addComponent(rbKi2)
                            .addComponent(rbKiHe))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(bLuuDeThi)
                                    .addComponent(bXoaDeThi)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(lbPDF))))
                    .addComponent(rbTrungGian))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfThoiGianKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfThoiGianKeyReleased
        this.deThi.setThoiGian(tfThoiGian.getText());
        tfTenDeThi.setText(this.inTenDethi().toString());
        taDeThi.setText(this.deThi.inDeThi().toString());
    }//GEN-LAST:event_tfThoiGianKeyReleased

    private void tfNamHocKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNamHocKeyReleased
        this.deThi.setNamHoc(tfNamHoc.getText());
        tfTenDeThi.setText(this.inTenDethi().toString());
        taDeThi.setText(this.deThi.inDeThi().toString());
    }//GEN-LAST:event_tfNamHocKeyReleased

    private void rbKi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbKi1ActionPerformed
        this.deThi.setKiHoc("Kì 1");
        tfTenDeThi.setText(this.inTenDethi().toString());
        taDeThi.setText(this.deThi.inDeThi().toString());
    }//GEN-LAST:event_rbKi1ActionPerformed

    private void rbKi2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbKi2ActionPerformed
        this.deThi.setKiHoc("Kì 2");
        tfTenDeThi.setText(this.inTenDethi().toString());
        taDeThi.setText(this.deThi.inDeThi().toString());
    }//GEN-LAST:event_rbKi2ActionPerformed

    private void rbKiHeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbKiHeActionPerformed
        this.deThi.setKiHoc("Kì hè");
        tfTenDeThi.setText(this.inTenDethi().toString());
        taDeThi.setText(this.deThi.inDeThi().toString());
    }//GEN-LAST:event_rbKiHeActionPerformed

    private void bXoaDeThiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bXoaDeThiActionPerformed

        this.deThi = new DeThi(this.monHocDangChon);

        this.listDsCauHoiDeThiModel = new DefaultListModel();
        this.listDsCauHoiDeThi.setModel(this.listDsCauHoiDeThiModel);

        //---Set lai thong tin co ban cua de thi
        tfThoiGian.setText("");
        tfNamHoc.setText("");
        rbTrungGian.setSelected(true);

        tfTenDeThi.setText(this.inTenDethi().toString());
        taDeThi.setText(this.deThi.inDeThi().toString());
        this.bTaoDeThi.setEnabled(true);
    }//GEN-LAST:event_bXoaDeThiActionPerformed

    private void lbXoaCauHoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbXoaCauHoiMouseClicked
        try {
            int index = this.listDsCauHoiDeThi.getSelectedIndex();
            CauHoi cauHoiDangChon = this.deThi.getDsCauHoi().get(index);
            //----------------------
            this.deThi.getDsCauHoi().remove(cauHoiDangChon);
            if (cauHoiDangChon instanceof TracNghiem) {
                this.deThi.xoaTracNghiem((TracNghiem) cauHoiDangChon);
            } else {
                this.deThi.xoaTuLuan((TuLuan) cauHoiDangChon);
            }
            taDeThi.setText(this.deThi.inDeThi().toString());
            this.listDsCauHoiDeThiModel.remove(index);
            this.listDsCauHoiDeThi.setModel(this.listDsCauHoiDeThiModel);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Hãy chọn câu hỏi cần xóa khỏi đề thi");
        }
    }//GEN-LAST:event_lbXoaCauHoiMouseClicked

    private void lbTronDapAnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbTronDapAnMouseClicked
        int index = this.listDsCauHoiDeThi.getSelectedIndex();
        CauHoi cauHoiDangChon = this.deThi.getDsCauHoi().get(index);
        Collections.shuffle(((TracNghiem) cauHoiDangChon).getDsDapAn());
        //---In lai de thi
        taDeThi.setText(this.deThi.inDeThi().toString());

    }//GEN-LAST:event_lbTronDapAnMouseClicked

    private void bUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpActionPerformed
        try {
            int index = this.listDsCauHoiDeThi.getSelectedIndex();
            CauHoi cauHoiDangChon = this.deThi.getDsCauHoi().get(index);
            if (index - 1 >= 0) {
                CauHoi tempCauHoi = this.deThi.getDsCauHoi().get(index - 1);
                this.deThi.getDsCauHoi().set(index - 1, cauHoiDangChon);
                this.listDsCauHoiDeThiModel.set(index - 1, cauHoiDangChon.getDeBai());

                this.deThi.getDsCauHoi().set(index, tempCauHoi);
                this.listDsCauHoiDeThiModel.set(index, tempCauHoi.getDeBai());

                this.listDsCauHoiDeThi.setModel(this.listDsCauHoiDeThiModel);
                this.listDsCauHoiDeThi.setSelectedIndex(index - 1);
                //---In lai de thi
                taDeThi.setText(this.deThi.inDeThi().toString());
            }

        } catch (Exception e) {
        }
    }//GEN-LAST:event_bUpActionPerformed

    private void bDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDownActionPerformed
        try {
            int index = this.listDsCauHoiDeThi.getSelectedIndex();
            CauHoi cauHoiDangChon = this.deThi.getDsCauHoi().get(index);
            int size = this.deThi.getDsCauHoi().size();
            if (index + 1 < size) {
                CauHoi tempCauHoi = this.deThi.getDsCauHoi().get(index + 1);
                this.deThi.getDsCauHoi().set(index + 1, cauHoiDangChon);
                this.listDsCauHoiDeThiModel.set(index + 1, cauHoiDangChon.getDeBai());

                this.deThi.getDsCauHoi().set(index, tempCauHoi);
                this.listDsCauHoiDeThiModel.set(index, tempCauHoi.getDeBai());

                this.listDsCauHoiDeThi.setModel(this.listDsCauHoiDeThiModel);
                this.listDsCauHoiDeThi.setSelectedIndex(index + 1);
                //---In lai de thi
                taDeThi.setText(this.deThi.inDeThi().toString());
            }

        } catch (Exception e) {
        }
    }//GEN-LAST:event_bDownActionPerformed

    private void listDsCauHoiDeThiValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listDsCauHoiDeThiValueChanged
        try {
            CauHoi cauHoiDangChon = this.deThi.getDsCauHoi().get(this.listDsCauHoiDeThi.getSelectedIndex());
            if (cauHoiDangChon instanceof TracNghiem) {
                this.lbTronDapAn.setVisible(true);
            } else {
                this.lbTronDapAn.setVisible(false);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_listDsCauHoiDeThiValueChanged

    private void lbXaoTronCauHoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbXaoTronCauHoiMouseClicked
        Collections.shuffle(deThi.getDsCauHoi());
        //---In lai DanhSachCauHoiDeThi va taDeThi
        this.listDsCauHoiDeThiModel = new DefaultListModel();
        for (CauHoi i : this.deThi.getDsCauHoi()) {
            this.listDsCauHoiDeThiModel.addElement(i.getDeBai());
        }
        this.listDsCauHoiDeThi.setModel(this.listDsCauHoiDeThiModel);

        taDeThi.setText(this.deThi.inDeThi().toString());
    }//GEN-LAST:event_lbXaoTronCauHoiMouseClicked
    //Ghi De thi moi tao ra file
    private boolean writeDeThi() {
        return IOFileBinary.writeFile(this.deThi, "data/dethi/" + tfTenDeThi.getText() + ".dat");
    }
    private void bLuuDeThiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLuuDeThiActionPerformed
        if (tfTenDeThi.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Hãy đặt tên đề thi");
        } else {
            deThi.setTenDeThi(tfTenDeThi.getText());
            if (writeDeThi()) {
                JOptionPane.showMessageDialog(null, "Lưu đề thi thành công");
            } else {
                JOptionPane.showMessageDialog(null, "Tên đề thi đã tồn tại. Hãy đặt lại tên đề thi");
            }
        }


    }//GEN-LAST:event_bLuuDeThiActionPerformed

    private void lbInMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbInMouseClicked
        JOptionPane.showMessageDialog(null, "Không tìm thấy kết nối với máy in");
    }//GEN-LAST:event_lbInMouseClicked

    private void lbWordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbWordMouseClicked
        JFileChooser fChooser = new JFileChooser();
        
        File dir = new File("data/dethi");
        fChooser.setCurrentDirectory(dir);
        FileFilter filter = new FileNameExtensionFilter("Save", "docx");
        fChooser.setFileFilter(filter);
        
        int choose = fChooser.showSaveDialog(this);
        if (choose == JFileChooser.APPROVE_OPTION) {//Danh dau ban da chap nhan SAVE
            if ( IOFileWord.writeWord(taDeThi.getText(), fChooser.getSelectedFile() +".docx") ) {
                JOptionPane.showMessageDialog(null, "Xuất ra file Word thành công");
            } else {
                JOptionPane.showMessageDialog(null, "Không thể ghi ra file vì file đang mở. Hãy đóng file và tiếp tục", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_lbWordMouseClicked

    private void rbTracNghiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbTracNghiemActionPerformed
        //---An phan chon hinh thuc de thi
        this.rbTG.setSelected(true);
        this.rbChung.setEnabled(false);
        this.rbRieng.setEnabled(false);
        
        this.spSoCauTL.setEnabled(false);
        this.tfTLChuong.setEnabled(false);
        this.tfTLDoKho.setEnabled(false);
        this.spSoCauTL.setValue(0);
        if ( !ckbSoLuongCauHoi.isSelected() && !ckbDoKho.isSelected()) {
            this.spSoCauTN.setEnabled(true);
        }
        if (this.ckbSoLuongCauHoi.isSelected()) {
            this.tfTNChuong.setEnabled(true);
        }
        if (this.ckbDoKho.isSelected()) {
            this.tfTNDoKho.setEnabled(true);
        }
        
    }//GEN-LAST:event_rbTracNghiemActionPerformed

    private void rbTuLuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbTuLuanActionPerformed
        //---An phan chon hinh thuc de thi
        this.rbTG.setSelected(true);
        this.rbChung.setEnabled(false);
        this.rbRieng.setEnabled(false);
        
        this.tfTNChuong.setEnabled(false);
        this.spSoCauTN.setEnabled(false);
        this.tfTNDoKho.setEnabled(false);       
        this.spSoCauTN.setValue(0);
        if ( !ckbSoLuongCauHoi.isSelected() && !ckbDoKho.isSelected()) {
            this.spSoCauTL.setEnabled(true);
        }
        if (this.ckbSoLuongCauHoi.isSelected()) {
            this.tfTLChuong.setEnabled(true);
        }
        if (this.ckbDoKho.isSelected()) {
            this.tfTLDoKho.setEnabled(true);
        }
    }//GEN-LAST:event_rbTuLuanActionPerformed

    private void rbTatCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbTatCaActionPerformed
        //---Hien phan chon hinh thuc de thi
        this.rbChung.setEnabled(true);
        this.rbRieng.setEnabled(true);
        
        if ( !ckbSoLuongCauHoi.isSelected() && !ckbDoKho.isSelected()) {
            this.spSoCauTN.setEnabled(true);
            this.spSoCauTL.setEnabled(true);
        }
        if (this.ckbSoLuongCauHoi.isSelected()) {
            this.tfTNChuong.setEnabled(true);
            this.tfTLChuong.setEnabled(true);
        }
        if (this.ckbDoKho.isSelected()) {
            this.tfTNDoKho.setEnabled(true);
            this.tfTLDoKho.setEnabled(true);
        }
    }//GEN-LAST:event_rbTatCaActionPerformed

    private void ckbSoLuongCauHoiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckbSoLuongCauHoiItemStateChanged
        if (this.ckbSoLuongCauHoi.isSelected()) {
            this.spSoCauTN.setEnabled(false);
            this.spSoCauTL.setEnabled(false);
            this.cbChuong.setEnabled(true);
            if (this.rbTracNghiem.isSelected()) {
                this.tfTNChuong.setEnabled(true);
            } else if (this.rbTuLuan.isSelected()) {
                this.tfTLChuong.setEnabled(true);
            } else {
                this.tfTNChuong.setEnabled(true);
                this.tfTLChuong.setEnabled(true);
            }
        } else {
            if (!this.ckbDoKho.isSelected()) {
                if (this.rbTracNghiem.isSelected()) {
                    this.spSoCauTN.setEnabled(true);
                    this.spSoCauTL.setEnabled(false);
                } else if (this.rbTuLuan.isSelected()) {
                    this.spSoCauTN.setEnabled(false);
                    this.spSoCauTL.setEnabled(true);
                } else {
                    this.spSoCauTN.setEnabled(true);
                    this.spSoCauTL.setEnabled(true);
                }
            }
            this.cbChuong.setEnabled(false);
            this.tfTNChuong.setEnabled(false);
            this.tfTLChuong.setEnabled(false);
        }
    }//GEN-LAST:event_ckbSoLuongCauHoiItemStateChanged

    private void ckbDoKhoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckbDoKhoItemStateChanged
        if (this.ckbDoKho.isSelected()) {
            this.spSoCauTN.setEnabled(false);
            this.spSoCauTL.setEnabled(false);
            this.cbDoKho.setEnabled(true);
            if (this.rbTracNghiem.isSelected()) {
                this.tfTNDoKho.setEnabled(true);
            } else if (this.rbTuLuan.isSelected()) {
                this.tfTLDoKho.setEnabled(true);
            } else {
                this.tfTNDoKho.setEnabled(true);
                this.tfTLDoKho.setEnabled(true);
            }
        } else {
            if (!this.ckbSoLuongCauHoi.isSelected()) {
                this.spSoCauTN.setEnabled(true);
                this.spSoCauTL.setEnabled(true);
            }
            this.cbDoKho.setEnabled(false);
            this.tfTNDoKho.setEnabled(false);
            this.tfTLDoKho.setEnabled(false);
        }
    }//GEN-LAST:event_ckbDoKhoItemStateChanged

    private void tfTNChuongKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTNChuongKeyReleased
        int index = this.cbChuong.getSelectedIndex();
        try {
            int soCau = Integer.parseInt(this.tfTNChuong.getText());
            this.soTNChuong[index] = soCau;
            //---Tinh lai tong so cau hoi ghi vao mang soTNChuong[0]
            this.soTNChuong[0] = 0;
            for (int i = 1; i < this.soTNChuong.length; i++) {
                this.soTNChuong[0] += this.soTNChuong[i];
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Số lượng câu hỏi phải là số không âm");
        }
    }//GEN-LAST:event_tfTNChuongKeyReleased

    private void tfTLChuongKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTLChuongKeyReleased
        int index = this.cbChuong.getSelectedIndex();
        try {
            int soCau = Integer.parseInt(this.tfTLChuong.getText());
            this.soTLChuong[index] = soCau;
            //---Tinh lai tong so cau hoi ghi vao mang soTLChuong[0]
            this.soTLChuong[0] = 0;
            for (int i = 1; i < this.soTLChuong.length; i++) {
                this.soTLChuong[0] += this.soTLChuong[i];
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Số lượng câu hỏi phải là số không âm");
        }
    }//GEN-LAST:event_tfTLChuongKeyReleased

    private void tfTNDoKhoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTNDoKhoKeyReleased
        int index = this.cbDoKho.getSelectedIndex();
        try {
            int soCau = Integer.parseInt(this.tfTNDoKho.getText());
            this.soTNDoKho[index] = soCau;
            //---Tinh lai tong so cau hoi ghi vao mang soTNDoKho[0]
            this.soTNDoKho[0] = 0;
            for (int i = 1; i < this.soTNDoKho.length; i++) {
                this.soTNDoKho[0] += this.soTNDoKho[i];
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Số lượng câu hỏi phải là số không âm");
        }
    }//GEN-LAST:event_tfTNDoKhoKeyReleased

    private void tfTLDoKhoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTLDoKhoKeyReleased
        int index = this.cbDoKho.getSelectedIndex();
        try {
            int soCau = Integer.parseInt(this.tfTLDoKho.getText());
            this.soTLDoKho[index] = soCau;
            //---Tinh lai tong so cau hoi ghi vao mang soTLDoKho[0]
            this.soTLDoKho[0] = 0;
            for (int i = 1; i < this.soTLDoKho.length; i++) {
                this.soTLDoKho[0] += this.soTLDoKho[i];
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Số lượng câu hỏi phải là số không âm");
        }
    }//GEN-LAST:event_tfTLDoKhoKeyReleased

    private void cbChuongItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbChuongItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            int index = this.cbChuong.getSelectedIndex();
            this.tfTNChuong.setText(Integer.toString(this.soTNChuong[index]));
            this.tfTLChuong.setText(Integer.toString(this.soTLChuong[index]));
            if (index == 0) {
                this.tfTNChuong.setEditable(false);
                this.tfTLChuong.setEditable(false);
            } else {
                this.tfTNChuong.setEditable(true);
                this.tfTLChuong.setEditable(true);
            }
        }
    }//GEN-LAST:event_cbChuongItemStateChanged

    private void cbDoKhoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbDoKhoItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            int index = this.cbDoKho.getSelectedIndex();
            this.tfTNDoKho.setText(Integer.toString(this.soTNDoKho[index]));
            this.tfTLDoKho.setText(Integer.toString(this.soTLDoKho[index]));
            if (index == 0) {
                this.tfTNDoKho.setEditable(false);
                this.tfTLDoKho.setEditable(false);
            } else {
                this.tfTNDoKho.setEditable(true);
                this.tfTLDoKho.setEditable(true);
            }
        }
    }//GEN-LAST:event_cbDoKhoItemStateChanged
    //---Sinh cac tap con m phan tu cua tap n phan tu (0,1,..,n-1)
    private ArrayList<ArrayList<TracNghiem>> combinations(int m, int n) {
        ArrayList<ArrayList<TracNghiem>> combinations = new ArrayList();//Mang chua cac to hop
        //Mang a chua tap con dau tien (0,1,...,m)
        int[] a = new int[m];
        for (int i = 0; i < m; i++) {
            a[i] = i;
        }
        ArrayList<TracNghiem> dsCauHoi = new ArrayList();
        for (int x = 0; x < m; x++) {
            dsCauHoi.add(dsTracNghiemMonHoc.get(x));
        }
        combinations.add(dsCauHoi);
        //Sinh tap con ke tiep

        while (a[0] != n - m) {
            int i = m - 1;
            while (a[i] == n - m + i) {
                i--;
            }
            a[i] += 1;
            for (int j = i + 1; j < m; j++) {
                a[j] = a[i] + j - i;
            }
            dsCauHoi = new ArrayList();
            for ( int x=0; x < m; x++) {
                dsCauHoi.add(dsTracNghiemMonHoc.get(x));
            }
            combinations.add(dsCauHoi);
        }
        return combinations;
    }
    private void bTaoDeThiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTaoDeThiActionPerformed
//        int soChuong = this.monHocDangChon.getSoChuong();
//        
//        ArrayList <TracNghiem> temp_dsTracNghiemMonHoc = new ArrayList();
//        for ( TracNghiem i : this.dsTracNghiemMonHoc) {
//            temp_dsTracNghiemMonHoc.add(i);
//        }
//        ArrayList <TuLuan> temp_dsTuLuanMonHoc = new ArrayList();
//        for ( TuLuan i : this.dsTuLuanMonHoc) {
//            temp_dsTuLuanMonHoc.add(i);
//        }
//
//        if (this.ckbSoLuongCauHoi.isSelected()) {
//            if (this.ckbDoKho.isSelected()) { //---Chon cau hoi theo dk Chuong va theo dk Do Kho
//                //---Kiem tra tong so cau hoi chon theo chuong va do kho co bang nhau khong?
//                if (this.soTNChuong[0] != this.soTNDoKho[0]) {
//                    JOptionPane.showMessageDialog(null, "Tổng số câu hỏi trắc nghiệm chọn theo chương và độ khó không bằng nhau","Error",JOptionPane.ERROR_MESSAGE);
//                    return;
//                }
//                if (this.soTLChuong[0] != this.soTLDoKho[0]) {
//                    JOptionPane.showMessageDialog(null,"Tổng số câu hỏi tự luận chọn theo chương và độ khó không bằng nhau","Error",JOptionPane.ERROR_MESSAGE);
//                    return;
//                }
//                
//            } else { //---Chon cau hoi theo dk Chuong va khong chon theo Do Kho
//                if (!this.rbTuLuan.isSelected()) {
//                    int soCauTN = this.soTNChuong[0];
//                    //---Tao ra tat cac cac to hop cau trac nghiem
//                    ArrayList<ArrayList<TracNghiem>> combinations = combinations(soCauTN, this.dsTracNghiemMonHoc.size());
//                    //---Xet tung to hop
//                    for (int i=0; i < combinations.size(); i++) {
//                        //Tao ma tran (1,0) : moi hang la mot cau hoi, moi cot la 1 chuong (=1 neu cau hoi thuoc chuong do, =0 neu khong thuoc)
//                        int[][] maze = new int[soCauTN][soChuong];
//                        for (TracNghiem tn : combinations.get(i)){
//                            
//                        }
//                    }
//                    
//                }
//                if (!this.rbTracNghiem.isSelected()) {
//                    for (int i = 1; i < soChuong + 1; i++) {
//                        //---Loc trong ngan hang cau hoi cac cau co so chuong = i
//                        ArrayList<TuLuan> dsTLChuong = new ArrayList();
//                        for (TuLuan tl : this.dsTuLuanMonHoc) {
//                            for (Integer k : tl.getDsChuong()) {
//                                if (k == i) {
//                                    dsTLChuong.add(tl);
//                                    break;
//                                }
//                            }
//                        }
//                        //---Kiem tra xem co du so cau hoi yeu cau khong?
//                        if (dsTLChuong.size() < this.soTLChuong[i]) {
//                            JOptionPane.showMessageDialog(null, "Ngân hàng câu hỏi không đủ số câu hỏi tự luận chương " + i);
//                            this.deThi = new DeThi(this.monHocDangChon);
//                            return;
//                        }
//                        //---Chon so cau hoi ngau nhien theo so cau hoi yeu cau
//                        Collections.shuffle(dsTLChuong);
//                        int soCau = this.soTNChuong[i];
//                        int index=0;
//                        while ( soCau > 0) {
//                            //Kiem tra xem cau da co trong de thi chua
//                            boolean check = true;
//                            for ( TuLuan j : this.deThi.getDsTuLuan()) {
//                                if ( j == dsTLChuong.get(index)) {
//                                    check = false;
//                                    break;
//                                }
//                            }
//                            if ( check) {
//                                this.deThi.themTuLuan(dsTLChuong.get(index));
//                                soCau--;
//                            }
//                            if ( ++index == dsTLChuong.size()) {
//                                JOptionPane.showMessageDialog(null, "Ngân hàng câu hỏi không thể đáp ứng yêu cầu của bạn");
//                                this.deThi = new DeThi(this.monHocDangChon);
//                                return;
//                            }
//                        }
//                    }
//                }
//            }
//        } else
//        if (this.ckbDoKho.isSelected()) {//Khong chon theo chuong va chon theo do kho
//            if (!this.rbTuLuan.isSelected()) {
//                for (int i = 1; i < 4; i++) {
//                    ArrayList<TracNghiem> dsTNDoKho = new ArrayList();
//                    //---Loc cac cau hoi trong ngan hang cau hoi theo tung do kho
//                    for (TracNghiem tn : this.dsTracNghiemMonHoc) {
//                        if (tn.getDoKho().equals(this.cbDoKho.getItemAt(i))) {
//                            dsTNDoKho.add(tn);
//                        }
//                    }
//                    //---Kiem tra xem co du so cau hoi yeu cau khong?
//                    if (dsTNDoKho.size() < this.soTNDoKho[i]) {
//                        JOptionPane.showMessageDialog(null, "Ngân hàng câu hỏi không đủ số câu hỏi trắc nghiệm độ khó " + this.cbDoKho.getItemAt(i));
//                        return;
//                    }
//                    //---Chon so cau hoi ngau nhien theo so cau hoi yeu cau
//                    for ( int j=0; j < this.soTNDoKho[i]; j++) {
//                        this.deThi.themTracNghiem(dsTNDoKho.get(j));
//                    }
//                }
//            }
//            if (!this.rbTracNghiem.isSelected()) {
//                for (int i = 1; i < 4; i++) {
//                    ArrayList<TuLuan> dsTLDoKho = new ArrayList();
//                    //---Loc cac cau hoi trong ngan hang cau hoi theo tung do kho
//                    for (TuLuan tl : this.dsTuLuanMonHoc) {
//                        if (tl.getDoKho().equals(this.cbDoKho.getItemAt(i))) {
//                            dsTLDoKho.add(tl);
//                        }
//                    }
//                    //---Kiem tra xem co du so cau hoi yeu cau khong?
//                    if (dsTLDoKho.size() < this.soTLDoKho[i]) {
//                        JOptionPane.showMessageDialog(null, "Ngân hàng câu hỏi không đủ số câu hỏi tự luận độ khó " + this.cbDoKho.getItemAt(i));
//                        this.deThi = new DeThi(this.monHocDangChon);
//                        return;
//                    }
//                    //---Chon so cau hoi ngau nhien theo so cau hoi yeu cau
//                    for ( int j=0; j < this.soTLDoKho[i]; j++) {
//                        this.deThi.themTuLuan(dsTLDoKho.get(j));
//                    }
//                }
//            }
//        } else {//---Khong chon theo chuong va do kho, chi chon theo so cau hoi
//            int soCauTN = (int) this.spSoCauTN.getValue();
//            int soCauTL = (int) this.spSoCauTL.getValue();
//            int sizeTN = this.dsTracNghiemMonHoc.size();
//            int sizeTL = this.dsTuLuanMonHoc.size();
//            if (soCauTN > 0) {
//                if (soCauTN > sizeTN) {
//                    JOptionPane.showMessageDialog(null, "Ngân hàng câu hỏi trắc nghiệm không đủ cho đề thi");
//                    return;
//                } else {
//                    while (soCauTN > 0 && listCauHoi.size() != 0) {
//                        randomID1 = random.nextInt(listCauHoi.size());
//                        listCauHoiKQ.add(listTuLuan.get(randomID1));
//                        modelCauHoi.addElement(listCauHoi.get(randomID1).getDeBai());
//                        modelTuLuan.addElement(listCauHoi.get(randomID1).getDeBai());
//                        this.danhSachCauHoi.setModel(modelCauHoi);
//                        socauhoi--;
//                        listCauHoi.remove(listCauHoi.get(randomID1));
//                    }
//                }
//            }
//            if (soCauTL > 0) {
//                if (soCauTL > sizeTL) {
//                    JOptionPane.showMessageDialog(null, "Ngân hàng câu hỏi tự luận không đủ cho đề thi");
//                    this.deThi = new DeThi(this.monHocDangChon);
//                    return;
//                } else {
//                    for (int i=0; i < soCauTL; i++) {
//                        this.deThi.themTuLuan(this.dsTuLuanMonHoc.get(i));
//                    }
//                }
//            }
//
//        }
//        
//        //---Neu hinh thuc trac nghiem va tu luan chung thi xao tron danh sach cau hoi cua de thi
//        if (this.rbChung.isSelected()) {
//            Collections.shuffle(this.deThi.getDsCauHoi());
//        }
//        //---Them vao listDsCauHoiDeThi
//        for (CauHoi i : this.deThi.getDsCauHoi()) {
//            this.listDsCauHoiDeThiModel.addElement(i.getDeBai());
//        }
//        this.listDsCauHoiDeThi.setModel(this.listDsCauHoiDeThiModel);
//        //---In de thi
//        this.taDeThi.setText(this.deThi.inDeThi().toString());
//
//        this.bTaoDeThi.setEnabled(false);
    }//GEN-LAST:event_bTaoDeThiActionPerformed

    private void lbPDFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbPDFMouseClicked
        JFileChooser fChooser = new JFileChooser();
        
        File dir = new File("data/dethi");
        fChooser.setCurrentDirectory(dir);
        FileFilter filter = new FileNameExtensionFilter("Save", "pdf");
        fChooser.setFileFilter(filter);
        
        int choose = fChooser.showSaveDialog(this);
        if (choose == JFileChooser.APPROVE_OPTION) {//Danh dau ban da chap nhan SAVE
            if ( IOFilePDF.writePDF(taDeThi.getText(), fChooser.getSelectedFile() +".pdf") ) {
                JOptionPane.showMessageDialog(null, "Xuất ra file PDF thành công");
            } else {
                JOptionPane.showMessageDialog(null, "Không thể ghi ra file vì file đang mở. Hãy đóng file và tiếp tục", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_lbPDFMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SinhDeThi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new SinhDeThi().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bDown;
    private javax.swing.JButton bLuuDeThi;
    private javax.swing.JButton bTaoDeThi;
    private javax.swing.JButton bUp;
    private javax.swing.JButton bXoaDeThi;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JComboBox<String> cbChuong;
    private javax.swing.JComboBox<String> cbDoKho;
    private javax.swing.JCheckBox ckbDoKho;
    private javax.swing.JCheckBox ckbSoLuongCauHoi;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JLabel lbIn;
    private javax.swing.JLabel lbPDF;
    private javax.swing.JLabel lbTronDapAn;
    private javax.swing.JLabel lbWord;
    private javax.swing.JLabel lbXaoTronCauHoi;
    private javax.swing.JLabel lbXoaCauHoi;
    private javax.swing.JList<String> listDsCauHoiDeThi;
    private javax.swing.JRadioButton rbChung;
    private javax.swing.JRadioButton rbKi1;
    private javax.swing.JRadioButton rbKi2;
    private javax.swing.JRadioButton rbKiHe;
    private javax.swing.JRadioButton rbRieng;
    private javax.swing.JRadioButton rbTG;
    private javax.swing.JRadioButton rbTatCa;
    private javax.swing.JRadioButton rbTracNghiem;
    private javax.swing.JRadioButton rbTrungGian;
    private javax.swing.JRadioButton rbTuLuan;
    private javax.swing.JSpinner spSoCauTL;
    private javax.swing.JSpinner spSoCauTN;
    private javax.swing.JTextArea taDeThi;
    private javax.swing.JTextField tfNamHoc;
    private javax.swing.JTextField tfTLChuong;
    private javax.swing.JTextField tfTLDoKho;
    private javax.swing.JTextField tfTNChuong;
    private javax.swing.JTextField tfTNDoKho;
    private javax.swing.JTextField tfTenDeThi;
    private javax.swing.JTextField tfThoiGian;
    // End of variables declaration//GEN-END:variables
}
class RandomNotRepeat {

    //Tao ra mang m so bat ki cac so trong [0;n] khong trung lap
    public int[] nextInt(int m, int n) {
        int[] randomArray = new int[m];
        Random rd = new Random();
        Vector v = new Vector();
        int iNew = 0;
        for (int i = 0; i < m;) {
            iNew = rd.nextInt(n);
            if (!v.contains(iNew)) {
                v.add(iNew);
                randomArray[i] = iNew;
                i++;
            }
        }
        return randomArray;
    }
}


